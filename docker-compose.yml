services:
  helpdeskapp:
    image: ${DOCKER_REGISTRY-}helpdeskapp
    build:
      context: .
      dockerfile: HelpDeskApp/Dockerfile
    depends_on:
      - mssql
      - papercut
      - loki 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Smtp:Server=papercut
      - Smtp:Port=25
      - Loki__Url=http://loki:3100
    ports:
      - "8080:80"
    networks:
      - loki_network

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
      - loki-data:/loki
    networks:
      - loki_network

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki_network

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki_network

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-CU13-ubuntu-22.04
    container_name: mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Test2137!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
      - ./sqlscripts:/docker-entrypoint-initdb.d
    command:
      - /bin/bash
      - -c 
      - |
        /opt/mssql/bin/sqlservr &
        sleep 30
        /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Test2137! -Q "
        IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'db-helpdesk-logger')
        BEGIN
            CREATE DATABASE [db-helpdesk-logger]
        END
        GO
        USE [db-helpdesk-logger]
        GO
        IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='ChatLogs' and xtype='U')
        BEGIN
            CREATE TABLE ChatLogs (
                Id INT PRIMARY KEY IDENTITY(1,1),
                EventTime DATETIME NOT NULL,
                EventType NVARCHAR(50) NOT NULL,
                UserId NVARCHAR(128) NOT NULL,
                Content NVARCHAR(MAX) NOT NULL,
                ChatId INT NOT NULL,
                Topic NVARCHAR(255) NOT NULL
            )
        END
        "
        tail -f /dev/null
    networks:
      - loki_network

  papercut:
    image: changemakerstudiosus/papercut-smtp:latest
    container_name: papercut
    ports:
      - "8081:80"  # Web UI port
      - "25:25"    # SMTP port

volumes:
  mssql_data:
  loki-data:
  
networks:
  loki_network:
    driver: bridge  